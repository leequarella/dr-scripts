material = script.vars[1]
item = script.vars[2]

class Tailor
  WORKING = Regexp.union([
   /One leather piece is too thick/,
   /A critical section of leather needs holes/,
   /Two pieces of the leather won't cooperate and could use some pins to align them/,
   /The leather's dimensions appear to have shifted and could benefit from some remeasuring/,
   /The fabric develops wrinkles from all the handling and could use a quick ironing/,
   /A deep crease develops along the fabric, bunching it together awkwardly/,
   /Roundtime/,
  ])

  WHATS_NEXT = Regexp.union([
    /needle and thread/,
    /straight pins/,
    /slickstone/,
  ])

  def initialize(item)
    @item = item
    check = dothis("analyze #{@item}", WHATS_NEXT)
    waitrt?
    make(first_step? check)
  end

  def make(next_step)
    check = dothis(next_step, WORKING)
    waitrt?
    fput "stow"
    next_step = next_step? check
    make(next_step) if next_step
  end

  def first_step? check
    if check =~ /needle and thread/
      sew
    elsif check =~ /straight pins/
      pins
    elsif check =~ /slickstone/
      iron
    end
  end

  def next_step? check
    if check =~ /One leather piece is too thick/ ||
    check =~ /A critical section of leather needs holes/
      awl

    elsif check =~ /The leather's dimensions appear to have shifted and could benefit from some remeasuring/
      measure

    elsif check =~ /The fabric develops wrinkles from all the handling and could use a quick ironing/ ||
    check =~ /A deep crease develops along the fabric, bunching it together awkwardly/
      iron

    elsif check =~ /Two pieces of the leather won't cooperate and could use some pins to align them/
      pins
    end
  end

  def cut
    fput "get scissors"
    "cut #{@item} with scissors"
  end

  def sew
    fput "get needle"
   "push #{@item} with needle"
  end

  def pins
    fput "get pins"
    "poke #{@item} with pins"
  end

  def awl
    fput "get awl"
    "poke #{@item} with awl"
  end

  def iron
    fput "get slick"
    "rub #{@item} with slick"
  end
end

item = script.vars[1]
Tailor.new(item)
